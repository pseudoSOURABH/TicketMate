{"ast":null,"code":"var _jsxFileName = \"C:\\\\Persist_Task\\\\Tmate\\\\frontend\\\\src\\\\PersistComponent\\\\Users.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { buyToken, buyStockWithToken } from './redux/Store';\nimport './Users.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Users() {\n  _s();\n  var _users$;\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users);\n  const [selectedUser, setSelectedUser] = React.useState(((_users$ = users[0]) === null || _users$ === void 0 ? void 0 : _users$.id) || 1);\n  const [selectedStock, setSelectedStock] = React.useState('Apple');\n  const [tokenAmount, setTokenAmount] = React.useState(0);\n  const [stockAmount, setStockAmount] = React.useState(0);\n  const user = users.find(user => user.id === selectedUser);\n  const handleBuyToken = () => {\n    if (user && user.balance >= tokenAmount) {\n      dispatch(buyToken({\n        userId: selectedUser,\n        stock: selectedStock,\n        amount: Number(tokenAmount)\n      }));\n      setTokenAmount(0); // Reset token amount after purchase\n    } else {\n      alert('Insufficient balance to buy tokens.');\n    }\n  };\n  const handleBuyStockWithToken = () => {\n    if (user) {\n      const tokenBalance = user.tokens[selectedStock] || 0;\n      if (tokenBalance >= stockAmount) {\n        dispatch(buyStockWithToken({\n          userId: selectedUser,\n          stock: selectedStock,\n          amount: Number(stockAmount)\n        }));\n        setStockAmount(0); // Reset stock amount after purchase\n      } else {\n        alert('Insufficient tokens to buy stock.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedUser(Number(e.target.value)),\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user.id,\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Remaining Balance: \", user.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buy-token-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setSelectedStock(e.target.value),\n            children: ['Apple', 'Tesla', 'Bitcoin', 'Salenium', 'Reliance', 'Google', 'NASDAQ', 'Amazon', 'Dogcoin', 'Either'].map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: stock,\n              children: stock\n            }, stock, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Token Amount\",\n            value: tokenAmount,\n            onChange: e => setTokenAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBuyToken,\n            children: \"Buy Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buy-stock-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setSelectedStock(e.target.value),\n            children: ['Apple', 'Tesla', 'Bitcoin', 'Salenium', 'Reliance', 'Google', 'NASDAQ', 'Amazon', 'Dogcoin', 'Either'].map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: stock,\n              children: stock\n            }, stock, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Stock Amount\",\n            value: stockAmount,\n            onChange: e => setStockAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBuyStockWithToken,\n            children: \"Buy Stock with Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Users, \"mpD8KbSKdvQXEKjAArzPa66lw0Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useDispatch","useSelector","buyToken","buyStockWithToken","jsxDEV","_jsxDEV","Users","_s","_users$","dispatch","users","state","selectedUser","setSelectedUser","useState","id","selectedStock","setSelectedStock","tokenAmount","setTokenAmount","stockAmount","setStockAmount","user","find","handleBuyToken","balance","userId","stock","amount","Number","alert","handleBuyStockWithToken","tokenBalance","tokens","className","children","onChange","e","target","value","map","name","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Persist_Task/Tmate/frontend/src/PersistComponent/Users.js"],"sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { buyToken, buyStockWithToken } from './redux/Store'\r\nimport './Users.css'\r\n\r\nfunction Users() {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector((state) => state.users)\r\n  const [selectedUser, setSelectedUser] = React.useState(users[0]?.id || 1)\r\n  const [selectedStock, setSelectedStock] = React.useState('Apple')\r\n  const [tokenAmount, setTokenAmount] = React.useState(0)\r\n  const [stockAmount, setStockAmount] = React.useState(0)\r\n\r\n  const user = users.find((user) => user.id === selectedUser)\r\n\r\n  const handleBuyToken = () => {\r\n    if (user && user.balance >= tokenAmount) {\r\n      dispatch(\r\n        buyToken({\r\n          userId: selectedUser,\r\n          stock: selectedStock,\r\n          amount: Number(tokenAmount),\r\n        })\r\n      )\r\n      setTokenAmount(0) // Reset token amount after purchase\r\n    } else {\r\n      alert('Insufficient balance to buy tokens.')\r\n    }\r\n  }\r\n\r\n  const handleBuyStockWithToken = () => {\r\n    if (user) {\r\n      const tokenBalance = user.tokens[selectedStock] || 0\r\n      if (tokenBalance >= stockAmount) {\r\n        dispatch(\r\n          buyStockWithToken({\r\n            userId: selectedUser,\r\n            stock: selectedStock,\r\n            amount: Number(stockAmount),\r\n          })\r\n        )\r\n        setStockAmount(0) // Reset stock amount after purchase\r\n      } else {\r\n        alert('Insufficient tokens to buy stock.')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"users-page\">\r\n      <select onChange={(e) => setSelectedUser(Number(e.target.value))}>\r\n        {users.map((user) => (\r\n          <option key={user.id} value={user.id}>\r\n            {user.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <div>\r\n        {user && (\r\n          <div className=\"user-box\">\r\n            <h2>{user.name}</h2>\r\n            <p>Remaining Balance: {user.balance}</p>\r\n            <div className=\"buy-token-section\">\r\n              <select onChange={(e) => setSelectedStock(e.target.value)}>\r\n                {[\r\n                  'Apple',\r\n                  'Tesla',\r\n                  'Bitcoin',\r\n                  'Salenium',\r\n                  'Reliance',\r\n                  'Google',\r\n                  'NASDAQ',\r\n                  'Amazon',\r\n                  'Dogcoin',\r\n                  'Either',\r\n                ].map((stock) => (\r\n                  <option key={stock} value={stock}>\r\n                    {stock}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Token Amount\"\r\n                value={tokenAmount}\r\n                onChange={(e) => setTokenAmount(e.target.value)}\r\n              />\r\n              <button onClick={handleBuyToken}>Buy Token</button>\r\n            </div>\r\n            <div className=\"buy-stock-section\">\r\n              <select onChange={(e) => setSelectedStock(e.target.value)}>\r\n                {[\r\n                  'Apple',\r\n                  'Tesla',\r\n                  'Bitcoin',\r\n                  'Salenium',\r\n                  'Reliance',\r\n                  'Google',\r\n                  'NASDAQ',\r\n                  'Amazon',\r\n                  'Dogcoin',\r\n                  'Either',\r\n                ].map((stock) => (\r\n                  <option key={stock} value={stock}>\r\n                    {stock}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Stock Amount\"\r\n                value={stockAmount}\r\n                onChange={(e) => setStockAmount(e.target.value)}\r\n              />\r\n              <button onClick={handleBuyStockWithToken}>\r\n                Buy Stock with Token\r\n              </button>\r\n            </div>\r\n            {/* Display user's cart or transactions here */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}