{"ast":null,"code":"var _jsxFileName = \"C:\\\\Persist_Task\\\\Tmate\\\\frontend\\\\src\\\\PersistComponent\\\\Observer\\\\Observer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport './Observer.css';\nimport Trading_Image from '../Utility/Trading_Image.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Observer() {\n  _s();\n  const transactions = useSelector(state => state.transactions);\n  const adminTransactions = useSelector(state => state.adminTransactions);\n  const allTransactions = [...transactions, ...adminTransactions].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  const stocks = useSelector(state => state.stocks);\n  const [selectedStock, setSelectedStock] = React.useState(Object.keys(stocks)[0] || '');\n  const formatTimestamp = timestamp => {\n    return new Intl.DateTimeFormat('en-IN', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false,\n      timeZone: 'Asia/Kolkata'\n    }).format(new Date(timestamp));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"observer-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"observer-content\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"observer-image\",\n        src: Trading_Image,\n        alt: \"Observer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allTransactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: tx.userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tx.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tx.stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tx.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatTimestamp(tx.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Observer, \"YIQJq7pOfUdZUzMNKq+WygGmQgo=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = Observer;\nexport default Observer;\nvar _c;\n$RefreshReg$(_c, \"Observer\");","map":{"version":3,"names":["React","useSelector","Trading_Image","jsxDEV","_jsxDEV","Observer","_s","transactions","state","adminTransactions","allTransactions","sort","a","b","Date","timestamp","stocks","selectedStock","setSelectedStock","useState","Object","keys","formatTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","timeZone","format","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","tx","index","userId","type","stock","amount","_c","$RefreshReg$"],"sources":["C:/Persist_Task/Tmate/frontend/src/PersistComponent/Observer/Observer.js"],"sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Observer.css'\r\nimport Trading_Image from '../Utility/Trading_Image.png'\r\n\r\nfunction Observer() {\r\n  const transactions = useSelector((state) => state.transactions)\r\n  const adminTransactions = useSelector((state) => state.adminTransactions)\r\n  const allTransactions = [...transactions, ...adminTransactions].sort(\r\n    (a, b) => new Date(b.timestamp) - new Date(a.timestamp)\r\n  )\r\n  const stocks = useSelector((state) => state.stocks)\r\n  const [selectedStock, setSelectedStock] = React.useState(\r\n    Object.keys(stocks)[0] || ''\r\n  )\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    return new Intl.DateTimeFormat('en-IN', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n      hour12: false,\r\n      timeZone: 'Asia/Kolkata',\r\n    }).format(new Date(timestamp))\r\n  }\r\n\r\n  return (\r\n    <div className=\"observer-page\">\r\n      <div className=\"observer-content\">\r\n        <img className=\"observer-image\" src={Trading_Image} alt=\"Observer\" />\r\n        {/* <div className=\"stock-box\">\r\n          <select\r\n            onChange={(e) => setSelectedStock(e.target.value)}\r\n            value={selectedStock}\r\n          >\r\n            {Object.keys(stocks).map((stock) => (\r\n              <option key={stock} value={stock}>\r\n                {stock}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div className=\"stock-actions\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"stock-quantity\"\r\n              placeholder=\"Quantity\"\r\n            />\r\n            <button className=\"sell-button\">Sell</button>\r\n            <p className=\"total-price\">Total Price: $0.00</p>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"transactions-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>User ID</th>\r\n              <th>Type</th>\r\n              <th>Stock</th>\r\n              <th>Amount</th>\r\n              <th>Timestamp</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allTransactions.map((tx, index) => (\r\n              <tr key={index}>\r\n                <td>{tx.userId}</td>\r\n                <td>{tx.type}</td>\r\n                <td>{tx.stock}</td>\r\n                <td>{tx.amount}</td>\r\n                <td>{formatTimestamp(tx.timestamp)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Observer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}