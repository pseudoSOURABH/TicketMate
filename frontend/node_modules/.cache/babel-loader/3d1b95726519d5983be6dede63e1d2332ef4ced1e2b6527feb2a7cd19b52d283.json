{"ast":null,"code":"var _jsxFileName = \"C:\\\\Persist_Task\\\\Tmate\\\\frontend\\\\src\\\\PersistComponent\\\\Stock\\\\Stock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './Stock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialStocks = [{\n  name: 'AAPL',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'GOOGL',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'AMZN',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'MSFT',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'TSLA',\n  price: Math.floor(Math.random() * 1000)\n}];\nconst strategies = {\n  AAPL: price => price * (1 + Math.random() * 0.02 - 0.01),\n  GOOGL: price => price * (1 + 0.005 * Math.sin(Date.now() / 1000)),\n  AMZN: price => price * (1 + (Math.random() > 0.5 ? 0.015 : -0.015)),\n  MSFT: price => price * (1 + 0.01 * Math.cos(Date.now() / 1000)),\n  TSLA: price => price * (1 + (Math.random() * 0.03 - 0.015))\n};\nconst initialChartData = {\n  labels: [new Date().toLocaleTimeString()],\n  datasets: initialStocks.map(stock => ({\n    label: stock.name,\n    data: [stock.price],\n    borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n    fill: false\n  }))\n};\nconst Stock = () => {\n  _s();\n  const [stocks, setStocks] = useState(initialStocks);\n  const [selectedStock, setSelectedStock] = useState(initialStocks[0].name);\n  const [chartData, setChartData] = useState(initialChartData);\n  const [zoomLevel, setZoomLevel] = useState(60); // Initial zoom level\n  const prevPrices = useRef(initialStocks.map(stock => stock.price));\n  const chartRef = useRef(null);\n  const containerRef = useRef(null);\n  const lastUpdateTime = useRef(new Date());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStocks(prevStocks => prevStocks.map(stock => ({\n        ...stock,\n        price: strategies[stock.name](stock.price)\n      })));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const updateChartData = () => {\n      setChartData(prevData => {\n        const newLabels = [...prevData.labels];\n        const currentTime = new Date();\n        if (currentTime - lastUpdateTime.current >= 5 * 60 * 1000 || newLabels.length === 1) {\n          newLabels.push(currentTime.toLocaleTimeString());\n          lastUpdateTime.current = currentTime;\n        } else {\n          newLabels.push('');\n        }\n        const newDatasets = prevData.datasets.map(dataset => {\n          const stock = stocks.find(stock => stock.name === dataset.label);\n          const newData = [...dataset.data, stock.price];\n          if (newData.length > zoomLevel) newData.shift();\n          return {\n            ...dataset,\n            data: newData\n          };\n        });\n        if (newLabels.length > zoomLevel) newLabels.shift();\n        return {\n          labels: newLabels,\n          datasets: newDatasets\n        };\n      });\n    };\n    updateChartData();\n    if (chartRef.current && chartRef.current.chartInstance) {\n      const chartInstance = chartRef.current.chartInstance;\n      chartInstance.update();\n    }\n  }, [stocks, zoomLevel]);\n  const handleStockSelect = stockName => {\n    setSelectedStock(stockName);\n  };\n  const stockMovementColor = (currentPrice, prevPrice) => {\n    if (currentPrice > prevPrice) {\n      return 'green';\n    } else if (currentPrice < prevPrice) {\n      return 'red';\n    }\n    return 'black';\n  };\n  const handleWheel = event => {\n    event.preventDefault();\n    if (event.deltaY > 0) {\n      setZoomLevel(prevZoom => Math.min(prevZoom + 10, 300));\n    } else {\n      setZoomLevel(prevZoom => Math.max(prevZoom - 10, 10));\n    }\n  };\n  useEffect(() => {\n    if (containerRef.current) {\n      containerRef.current.scrollLeft = containerRef.current.scrollWidth;\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Trading Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stocks-list\",\n        children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-item ${stock.name === selectedStock ? 'selected' : ''}`,\n          onClick: () => handleStockSelect(stock.name),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: stock.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `price ${stockMovementColor(stock.price, prevPrices.current[index])}`,\n            children: stock.price.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), prevPrices.current[index] = stock.price]\n        }, stock.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        ref: containerRef,\n        onWheel: handleWheel,\n        children: selectedDataset && /*#__PURE__*/_jsxDEV(Line, {\n          ref: chartRef,\n          data: {\n            labels: chartData.labels,\n            datasets: [selectedDataset]\n          },\n          options: {\n            scales: {\n              x: {\n                type: 'category',\n                position: 'bottom',\n                ticks: {\n                  autoSkip: false,\n                  maxTicksLimit: 10\n                }\n              },\n              y: {\n                beginAtZero: false\n              }\n            },\n            animation: {\n              duration: 0\n            },\n            maintainAspectRatio: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Stock, \"VmIQozU6mchU/EUIsyxdJndL/Bk=\");\n_c = Stock;\nexport default Stock;\nvar _c;\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","jsxDEV","_jsxDEV","initialStocks","name","price","Math","floor","random","strategies","AAPL","GOOGL","sin","Date","now","AMZN","MSFT","cos","TSLA","initialChartData","labels","toLocaleTimeString","datasets","map","stock","label","data","borderColor","toString","fill","Stock","_s","stocks","setStocks","selectedStock","setSelectedStock","chartData","setChartData","zoomLevel","setZoomLevel","prevPrices","chartRef","containerRef","lastUpdateTime","interval","setInterval","prevStocks","clearInterval","updateChartData","prevData","newLabels","currentTime","current","length","push","newDatasets","dataset","find","newData","shift","chartInstance","update","handleStockSelect","stockName","stockMovementColor","currentPrice","prevPrice","handleWheel","event","preventDefault","deltaY","prevZoom","min","max","scrollLeft","scrollWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","toFixed","ref","onWheel","selectedDataset","options","scales","x","type","position","ticks","autoSkip","maxTicksLimit","y","beginAtZero","animation","duration","maintainAspectRatio","_c","$RefreshReg$"],"sources":["C:/Persist_Task/Tmate/frontend/src/PersistComponent/Stock/Stock.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport 'chart.js/auto'\r\nimport './Stock.css'\r\n\r\nconst initialStocks = [\r\n  { name: 'AAPL', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'GOOGL', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'AMZN', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'MSFT', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'TSLA', price: Math.floor(Math.random() * 1000) },\r\n]\r\n\r\nconst strategies = {\r\n  AAPL: (price) => price * (1 + Math.random() * 0.02 - 0.01),\r\n  GOOGL: (price) => price * (1 + 0.005 * Math.sin(Date.now() / 1000)),\r\n  AMZN: (price) => price * (1 + (Math.random() > 0.5 ? 0.015 : -0.015)),\r\n  MSFT: (price) => price * (1 + 0.01 * Math.cos(Date.now() / 1000)),\r\n  TSLA: (price) => price * (1 + (Math.random() * 0.03 - 0.015)),\r\n}\r\n\r\nconst initialChartData = {\r\n  labels: [new Date().toLocaleTimeString()],\r\n  datasets: initialStocks.map((stock) => ({\r\n    label: stock.name,\r\n    data: [stock.price],\r\n    borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n    fill: false,\r\n  })),\r\n}\r\n\r\nconst Stock = () => {\r\n  const [stocks, setStocks] = useState(initialStocks)\r\n  const [selectedStock, setSelectedStock] = useState(initialStocks[0].name)\r\n  const [chartData, setChartData] = useState(initialChartData)\r\n  const [zoomLevel, setZoomLevel] = useState(60) // Initial zoom level\r\n  const prevPrices = useRef(initialStocks.map((stock) => stock.price))\r\n  const chartRef = useRef(null)\r\n  const containerRef = useRef(null)\r\n  const lastUpdateTime = useRef(new Date())\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setStocks((prevStocks) =>\r\n        prevStocks.map((stock) => ({\r\n          ...stock,\r\n          price: strategies[stock.name](stock.price),\r\n        }))\r\n      )\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const updateChartData = () => {\r\n      setChartData((prevData) => {\r\n        const newLabels = [...prevData.labels]\r\n        const currentTime = new Date()\r\n        if (\r\n          currentTime - lastUpdateTime.current >= 5 * 60 * 1000 ||\r\n          newLabels.length === 1\r\n        ) {\r\n          newLabels.push(currentTime.toLocaleTimeString())\r\n          lastUpdateTime.current = currentTime\r\n        } else {\r\n          newLabels.push('')\r\n        }\r\n        const newDatasets = prevData.datasets.map((dataset) => {\r\n          const stock = stocks.find((stock) => stock.name === dataset.label)\r\n          const newData = [...dataset.data, stock.price]\r\n          if (newData.length > zoomLevel) newData.shift()\r\n          return {\r\n            ...dataset,\r\n            data: newData,\r\n          }\r\n        })\r\n        if (newLabels.length > zoomLevel) newLabels.shift()\r\n        return {\r\n          labels: newLabels,\r\n          datasets: newDatasets,\r\n        }\r\n      })\r\n    }\r\n\r\n    updateChartData()\r\n\r\n    if (chartRef.current && chartRef.current.chartInstance) {\r\n      const chartInstance = chartRef.current.chartInstance\r\n      chartInstance.update()\r\n    }\r\n  }, [stocks, zoomLevel])\r\n\r\n  const handleStockSelect = (stockName) => {\r\n    setSelectedStock(stockName)\r\n  }\r\n\r\n  const stockMovementColor = (currentPrice, prevPrice) => {\r\n    if (currentPrice > prevPrice) {\r\n      return 'green'\r\n    } else if (currentPrice < prevPrice) {\r\n      return 'red'\r\n    }\r\n    return 'black'\r\n  }\r\n\r\n  const handleWheel = (event) => {\r\n    event.preventDefault()\r\n    if (event.deltaY > 0) {\r\n      setZoomLevel((prevZoom) => Math.min(prevZoom + 10, 300))\r\n    } else {\r\n      setZoomLevel((prevZoom) => Math.max(prevZoom - 10, 10))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      containerRef.current.scrollLeft = containerRef.current.scrollWidth\r\n    }\r\n  }, [chartData])\r\n\r\n  return (\r\n    <div className=\"stock-container\">\r\n      <h1>Stock Trading Platform</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"stocks-list\">\r\n          {stocks.map((stock, index) => (\r\n            <div\r\n              key={stock.name}\r\n              className={`stock-item ${\r\n                stock.name === selectedStock ? 'selected' : ''\r\n              }`}\r\n              onClick={() => handleStockSelect(stock.name)}\r\n            >\r\n              <span>{stock.name}</span>\r\n              <span\r\n                className={`price ${stockMovementColor(\r\n                  stock.price,\r\n                  prevPrices.current[index]\r\n                )}`}\r\n              >\r\n                {stock.price.toFixed(2)}\r\n              </span>\r\n              {(prevPrices.current[index] = stock.price)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div\r\n          className=\"chart-container\"\r\n          ref={containerRef}\r\n          onWheel={handleWheel}\r\n        >\r\n          {selectedDataset && (\r\n            <Line\r\n              ref={chartRef}\r\n              data={{\r\n                labels: chartData.labels,\r\n                datasets: [selectedDataset],\r\n              }}\r\n              options={{\r\n                scales: {\r\n                  x: {\r\n                    type: 'category',\r\n                    position: 'bottom',\r\n                    ticks: {\r\n                      autoSkip: false,\r\n                      maxTicksLimit: 10,\r\n                    },\r\n                  },\r\n                  y: {\r\n                    beginAtZero: false,\r\n                  },\r\n                },\r\n                animation: {\r\n                  duration: 0,\r\n                },\r\n                maintainAspectRatio: false,\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stock\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}