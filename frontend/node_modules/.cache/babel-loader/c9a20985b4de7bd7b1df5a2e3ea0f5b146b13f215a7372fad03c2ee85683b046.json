{"ast":null,"code":"var _jsxFileName = \"C:\\\\Persist_Task\\\\Tmate\\\\frontend\\\\src\\\\PersistComponent\\\\Stock\\\\Stock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './Stock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialStocks = [{\n  name: 'AAPL',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'GOOGL',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'AMZN',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'MSFT',\n  price: Math.floor(Math.random() * 1000)\n}, {\n  name: 'TSLA',\n  price: Math.floor(Math.random() * 1000)\n}];\nconst Stock = () => {\n  _s();\n  const [stocks, setStocks] = useState(initialStocks);\n  const [selectedStock, setSelectedStock] = useState(initialStocks[0].name);\n  const [chartData, setChartData] = useState({\n    labels: Array.from({\n      length: 50\n    }, (_, i) => i),\n    datasets: initialStocks.map(stock => ({\n      label: stock.name,\n      data: Array(50).fill(stock.price),\n      borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n      fill: false\n    }))\n  });\n  const [fluctuation, setFluctuation] = useState(1);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setStocks(prevStocks => prevStocks.map(stock => ({\n        ...stock,\n        price: stock.price + (fluctuation <= 5 ? 5 : -5)\n      })));\n      setFluctuation(fluctuation => fluctuation === 10 ? 1 : fluctuation + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [fluctuation]);\n  useEffect(() => {\n    setChartData(prevData => ({\n      ...prevData,\n      datasets: prevData.datasets.map((dataset, index) => {\n        const stock = stocks.find(stock => stock.name === dataset.label);\n        dataset.data.push(stock.price);\n        if (dataset.data.length > 50) dataset.data.shift();\n        return dataset;\n      })\n    }));\n  }, [stocks]);\n  const handleStockSelect = stockName => {\n    setSelectedStock(stockName);\n  };\n  const selectedDataset = chartData.datasets.find(dataset => dataset.label === selectedStock);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Trading Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stocks-list\",\n        children: stocks.map(stock => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-item ${stock.name === selectedStock ? 'selected' : ''}`,\n          onClick: () => handleStockSelect(stock.name),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: stock.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: stock.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, stock.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: selectedDataset && /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: chartData.labels,\n            datasets: [selectedDataset]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Stock, \"Y+W7s1a7FfX8yejBruuDrF8uma4=\");\n_c = Stock;\nexport default Stock;\nvar _c;\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","jsxDEV","_jsxDEV","initialStocks","name","price","Math","floor","random","Stock","_s","stocks","setStocks","selectedStock","setSelectedStock","chartData","setChartData","labels","Array","from","length","_","i","datasets","map","stock","label","data","fill","borderColor","toString","fluctuation","setFluctuation","interval","setInterval","prevStocks","clearInterval","prevData","dataset","index","find","push","shift","handleStockSelect","stockName","selectedDataset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Persist_Task/Tmate/frontend/src/PersistComponent/Stock/Stock.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport 'chart.js/auto'\r\nimport './Stock.css'\r\n\r\nconst initialStocks = [\r\n  { name: 'AAPL', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'GOOGL', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'AMZN', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'MSFT', price: Math.floor(Math.random() * 1000) },\r\n  { name: 'TSLA', price: Math.floor(Math.random() * 1000) },\r\n]\r\n\r\nconst Stock = () => {\r\n  const [stocks, setStocks] = useState(initialStocks)\r\n  const [selectedStock, setSelectedStock] = useState(initialStocks[0].name)\r\n  const [chartData, setChartData] = useState({\r\n    labels: Array.from({ length: 50 }, (_, i) => i),\r\n    datasets: initialStocks.map((stock) => ({\r\n      label: stock.name,\r\n      data: Array(50).fill(stock.price),\r\n      borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n      fill: false,\r\n    })),\r\n  })\r\n  const [fluctuation, setFluctuation] = useState(1)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setStocks((prevStocks) =>\r\n        prevStocks.map((stock) => ({\r\n          ...stock,\r\n          price: stock.price + (fluctuation <= 5 ? 5 : -5),\r\n        }))\r\n      )\r\n      setFluctuation((fluctuation) =>\r\n        fluctuation === 10 ? 1 : fluctuation + 1\r\n      )\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [fluctuation])\r\n\r\n  useEffect(() => {\r\n    setChartData((prevData) => ({\r\n      ...prevData,\r\n      datasets: prevData.datasets.map((dataset, index) => {\r\n        const stock = stocks.find((stock) => stock.name === dataset.label)\r\n        dataset.data.push(stock.price)\r\n        if (dataset.data.length > 50) dataset.data.shift()\r\n        return dataset\r\n      }),\r\n    }))\r\n  }, [stocks])\r\n\r\n  const handleStockSelect = (stockName) => {\r\n    setSelectedStock(stockName)\r\n  }\r\n\r\n  const selectedDataset = chartData.datasets.find(\r\n    (dataset) => dataset.label === selectedStock\r\n  )\r\n\r\n  return (\r\n    <div className=\"stock-container\">\r\n      <h1>Stock Trading Platform</h1>\r\n      <div className=\"main-content\">\r\n        <div className=\"stocks-list\">\r\n          {stocks.map((stock) => (\r\n            <div\r\n              key={stock.name}\r\n              className={`stock-item ${\r\n                stock.name === selectedStock ? 'selected' : ''\r\n              }`}\r\n              onClick={() => handleStockSelect(stock.name)}\r\n            >\r\n              <span>{stock.name}</span>\r\n              <span>{stock.price}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chart-container\">\r\n          {selectedDataset && (\r\n            <Line\r\n              data={{\r\n                labels: chartData.labels,\r\n                datasets: [selectedDataset],\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stock\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}