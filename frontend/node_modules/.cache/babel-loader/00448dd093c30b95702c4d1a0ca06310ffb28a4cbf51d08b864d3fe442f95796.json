{"ast":null,"code":"var _jsxFileName = \"C:\\\\Persist_Task\\\\Tmate\\\\frontend\\\\src\\\\PersistComponent\\\\Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTransaction, updateAdminFunds, updateAdminStocks } from './redux/actions';\nimport './Users.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stockList = ['Stock A', 'Stock B', 'Stock C', 'Stock D', 'Stock E'];\nfunction Users() {\n  _s();\n  const dispatch = useDispatch();\n  const transactions = useSelector(state => state.transactions);\n  const [users, setUsers] = useState(new Array(5).fill().map((_, index) => ({\n    id: index + 1,\n    tokens: {}\n  })));\n  const [selectedStock, setSelectedStock] = useState('');\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const handleBuyToken = (userId, stock, tokenAmount) => {\n    const user = users.find(u => u.id === userId);\n    const updatedTokens = {\n      ...user.tokens,\n      [stock]: (user.tokens[stock] || 0) + tokenAmount\n    };\n    const updatedUsers = users.map(u => u.id === userId ? {\n      ...u,\n      tokens: updatedTokens\n    } : u);\n    setUsers(updatedUsers);\n\n    // Add transaction for user buying token\n    const tokenTransaction = {\n      userId,\n      type: 'buy_token',\n      stock,\n      amount: tokenAmount,\n      time: new Date().toISOString(),\n      instructions: `User ${userId} bought ${tokenAmount} tokens of ${stock}`,\n      signature: 'randomSignature',\n      block: 'randomBlock',\n      by: `User ${userId}`,\n      fee: 'randomFee'\n    };\n    dispatch(addTransaction(tokenTransaction));\n\n    // Admin buys the stock automatically\n    const stockTransaction = {\n      userId: 'admin',\n      type: 'buy_stock',\n      stock,\n      amount: tokenAmount,\n      time: new Date().toISOString(),\n      instructions: `Admin bought ${tokenAmount} stocks of ${stock} as User ${userId} bought tokens`,\n      signature: 'randomSignature',\n      block: 'randomBlock',\n      by: 'admin',\n      fee: 'randomFee'\n    };\n    dispatch(addTransaction(stockTransaction));\n    dispatch(updateAdminStocks({\n      stock,\n      amount: tokenAmount\n    }));\n    dispatch(updateAdminFunds(-tokenAmount * 100)); // Assume stock price is 100 for simplicity\n\n    alert('Token purchase and corresponding stock purchase recorded!');\n  };\n  const handleBuyStock = (userId, stock, stockAmount) => {\n    const user = users.find(u => u.id === userId);\n    if (user.tokens[stock] >= stockAmount) {\n      const updatedTokens = {\n        ...user.tokens,\n        [stock]: user.tokens[stock] - stockAmount\n      };\n      const updatedUsers = users.map(u => u.id === userId ? {\n        ...u,\n        tokens: updatedTokens\n      } : u);\n      setUsers(updatedUsers);\n\n      // Add transaction for user buying stock\n      const stockTransaction = {\n        userId,\n        type: 'buy_stock',\n        stock,\n        amount: stockAmount,\n        time: new Date().toISOString(),\n        instructions: `User ${userId} bought ${stockAmount} stocks of ${stock} using tokens`,\n        signature: 'randomSignature',\n        block: 'randomBlock',\n        by: `User ${userId}`,\n        fee: 'randomFee'\n      };\n      dispatch(addTransaction(stockTransaction));\n\n      // Admin sells the stock automatically\n      const sellTransaction = {\n        userId: 'admin',\n        type: 'sell_stock',\n        stock,\n        amount: stockAmount,\n        time: new Date().toISOString(),\n        instructions: `Admin sold ${stockAmount} stocks of ${stock} as User ${userId} bought stocks using tokens`,\n        signature: 'randomSignature',\n        block: 'randomBlock',\n        by: 'admin',\n        fee: 'randomFee'\n      };\n      dispatch(addTransaction(sellTransaction));\n      dispatch(updateAdminStocks({\n        stock,\n        amount: -stockAmount\n      }));\n      dispatch(updateAdminFunds(stockAmount * 100)); // Assume stock price is 100 for simplicity\n\n      alert('Stock purchase and corresponding stock sale recorded!');\n    } else {\n      alert('Not enough tokens to buy stock');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-page\",\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"User \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedStock(e.target.value),\n        value: selectedStock,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), stockList.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: stock,\n          children: stock\n        }, stock, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Token Amount\",\n        value: tokenAmount,\n        onChange: e => setTokenAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBuyToken(user.id, selectedStock, tokenAmount),\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBuyStock(user.id, selectedStock, tokenAmount),\n        children: \"Buy Stock Using Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Available Tokens: \", JSON.stringify(user.tokens)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Users, \"GiH+4ozxcGmPqBopNKGV5dgjXSY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addTransaction","updateAdminFunds","updateAdminStocks","jsxDEV","_jsxDEV","stockList","Users","_s","dispatch","transactions","state","users","setUsers","Array","fill","map","_","index","id","tokens","selectedStock","setSelectedStock","tokenAmount","setTokenAmount","handleBuyToken","userId","stock","user","find","u","updatedTokens","updatedUsers","tokenTransaction","type","amount","time","Date","toISOString","instructions","signature","block","by","fee","stockTransaction","alert","handleBuyStock","stockAmount","sellTransaction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","disabled","placeholder","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Persist_Task/Tmate/frontend/src/PersistComponent/Users.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  addTransaction,\r\n  updateAdminFunds,\r\n  updateAdminStocks,\r\n} from './redux/actions'\r\nimport './Users.css'\r\n\r\nconst stockList = ['Stock A', 'Stock B', 'Stock C', 'Stock D', 'Stock E']\r\n\r\nfunction Users() {\r\n  const dispatch = useDispatch()\r\n  const transactions = useSelector((state) => state.transactions)\r\n  const [users, setUsers] = useState(\r\n    new Array(5).fill().map((_, index) => ({\r\n      id: index + 1,\r\n      tokens: {},\r\n    }))\r\n  )\r\n\r\n  const [selectedStock, setSelectedStock] = useState('')\r\n  const [tokenAmount, setTokenAmount] = useState(0)\r\n\r\n  const handleBuyToken = (userId, stock, tokenAmount) => {\r\n    const user = users.find((u) => u.id === userId)\r\n    const updatedTokens = {\r\n      ...user.tokens,\r\n      [stock]: (user.tokens[stock] || 0) + tokenAmount,\r\n    }\r\n    const updatedUsers = users.map((u) =>\r\n      u.id === userId ? { ...u, tokens: updatedTokens } : u\r\n    )\r\n    setUsers(updatedUsers)\r\n\r\n    // Add transaction for user buying token\r\n    const tokenTransaction = {\r\n      userId,\r\n      type: 'buy_token',\r\n      stock,\r\n      amount: tokenAmount,\r\n      time: new Date().toISOString(),\r\n      instructions: `User ${userId} bought ${tokenAmount} tokens of ${stock}`,\r\n      signature: 'randomSignature',\r\n      block: 'randomBlock',\r\n      by: `User ${userId}`,\r\n      fee: 'randomFee',\r\n    }\r\n    dispatch(addTransaction(tokenTransaction))\r\n\r\n    // Admin buys the stock automatically\r\n    const stockTransaction = {\r\n      userId: 'admin',\r\n      type: 'buy_stock',\r\n      stock,\r\n      amount: tokenAmount,\r\n      time: new Date().toISOString(),\r\n      instructions: `Admin bought ${tokenAmount} stocks of ${stock} as User ${userId} bought tokens`,\r\n      signature: 'randomSignature',\r\n      block: 'randomBlock',\r\n      by: 'admin',\r\n      fee: 'randomFee',\r\n    }\r\n    dispatch(addTransaction(stockTransaction))\r\n    dispatch(updateAdminStocks({ stock, amount: tokenAmount }))\r\n    dispatch(updateAdminFunds(-tokenAmount * 100)) // Assume stock price is 100 for simplicity\r\n\r\n    alert('Token purchase and corresponding stock purchase recorded!')\r\n  }\r\n\r\n  const handleBuyStock = (userId, stock, stockAmount) => {\r\n    const user = users.find((u) => u.id === userId)\r\n    if (user.tokens[stock] >= stockAmount) {\r\n      const updatedTokens = {\r\n        ...user.tokens,\r\n        [stock]: user.tokens[stock] - stockAmount,\r\n      }\r\n      const updatedUsers = users.map((u) =>\r\n        u.id === userId ? { ...u, tokens: updatedTokens } : u\r\n      )\r\n      setUsers(updatedUsers)\r\n\r\n      // Add transaction for user buying stock\r\n      const stockTransaction = {\r\n        userId,\r\n        type: 'buy_stock',\r\n        stock,\r\n        amount: stockAmount,\r\n        time: new Date().toISOString(),\r\n        instructions: `User ${userId} bought ${stockAmount} stocks of ${stock} using tokens`,\r\n        signature: 'randomSignature',\r\n        block: 'randomBlock',\r\n        by: `User ${userId}`,\r\n        fee: 'randomFee',\r\n      }\r\n      dispatch(addTransaction(stockTransaction))\r\n\r\n      // Admin sells the stock automatically\r\n      const sellTransaction = {\r\n        userId: 'admin',\r\n        type: 'sell_stock',\r\n        stock,\r\n        amount: stockAmount,\r\n        time: new Date().toISOString(),\r\n        instructions: `Admin sold ${stockAmount} stocks of ${stock} as User ${userId} bought stocks using tokens`,\r\n        signature: 'randomSignature',\r\n        block: 'randomBlock',\r\n        by: 'admin',\r\n        fee: 'randomFee',\r\n      }\r\n      dispatch(addTransaction(sellTransaction))\r\n      dispatch(updateAdminStocks({ stock, amount: -stockAmount }))\r\n      dispatch(updateAdminFunds(stockAmount * 100)) // Assume stock price is 100 for simplicity\r\n\r\n      alert('Stock purchase and corresponding stock sale recorded!')\r\n    } else {\r\n      alert('Not enough tokens to buy stock')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"users-page\">\r\n      {users.map((user) => (\r\n        <div key={user.id} className=\"user-box\">\r\n          <h2>User {user.id}</h2>\r\n          <select\r\n            onChange={(e) => setSelectedStock(e.target.value)}\r\n            value={selectedStock}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select Stock\r\n            </option>\r\n            {stockList.map((stock) => (\r\n              <option key={stock} value={stock}>\r\n                {stock}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Token Amount\"\r\n            value={tokenAmount}\r\n            onChange={(e) => setTokenAmount(e.target.value)}\r\n          />\r\n          <button\r\n            onClick={() => handleBuyToken(user.id, selectedStock, tokenAmount)}\r\n          >\r\n            Buy Token\r\n          </button>\r\n          <button\r\n            onClick={() => handleBuyStock(user.id, selectedStock, tokenAmount)}\r\n          >\r\n            Buy Stock Using Token\r\n          </button>\r\n          <div>Available Tokens: {JSON.stringify(user.tokens)}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}